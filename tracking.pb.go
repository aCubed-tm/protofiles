// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddCaptureRequest struct {
	// x-position on the captured image
	CaptureX float32 `protobuf:"fixed32,1,opt,name=captureX,proto3" json:"captureX,omitempty"`
	// y-position on the captured image
	CaptureY             float32  `protobuf:"fixed32,2,opt,name=captureY,proto3" json:"captureY,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	ObjectUuid           string   `protobuf:"bytes,4,opt,name=objectUuid,proto3" json:"objectUuid,omitempty"`
	CameraUuid           string   `protobuf:"bytes,5,opt,name=cameraUuid,proto3" json:"cameraUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCaptureRequest) Reset()         { *m = AddCaptureRequest{} }
func (m *AddCaptureRequest) String() string { return proto.CompactTextString(m) }
func (*AddCaptureRequest) ProtoMessage()    {}
func (*AddCaptureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{0}
}

func (m *AddCaptureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCaptureRequest.Unmarshal(m, b)
}
func (m *AddCaptureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCaptureRequest.Marshal(b, m, deterministic)
}
func (m *AddCaptureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCaptureRequest.Merge(m, src)
}
func (m *AddCaptureRequest) XXX_Size() int {
	return xxx_messageInfo_AddCaptureRequest.Size(m)
}
func (m *AddCaptureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCaptureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCaptureRequest proto.InternalMessageInfo

func (m *AddCaptureRequest) GetCaptureX() float32 {
	if m != nil {
		return m.CaptureX
	}
	return 0
}

func (m *AddCaptureRequest) GetCaptureY() float32 {
	if m != nil {
		return m.CaptureY
	}
	return 0
}

func (m *AddCaptureRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *AddCaptureRequest) GetObjectUuid() string {
	if m != nil {
		return m.ObjectUuid
	}
	return ""
}

func (m *AddCaptureRequest) GetCameraUuid() string {
	if m != nil {
		return m.CameraUuid
	}
	return ""
}

type AddCaptureReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCaptureReply) Reset()         { *m = AddCaptureReply{} }
func (m *AddCaptureReply) String() string { return proto.CompactTextString(m) }
func (*AddCaptureReply) ProtoMessage()    {}
func (*AddCaptureReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{1}
}

func (m *AddCaptureReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCaptureReply.Unmarshal(m, b)
}
func (m *AddCaptureReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCaptureReply.Marshal(b, m, deterministic)
}
func (m *AddCaptureReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCaptureReply.Merge(m, src)
}
func (m *AddCaptureReply) XXX_Size() int {
	return xxx_messageInfo_AddCaptureReply.Size(m)
}
func (m *AddCaptureReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCaptureReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddCaptureReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddCaptureRequest)(nil), "proto.AddCaptureRequest")
	proto.RegisterType((*AddCaptureReply)(nil), "proto.AddCaptureReply")
}

func init() { proto.RegisterFile("tracking.proto", fileDescriptor_62a1d65b4bf956e8) }

var fileDescriptor_62a1d65b4bf956e8 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x29, 0x4a, 0x4c,
	0xce, 0xce, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xf3,
	0x19, 0xb9, 0x04, 0x1d, 0x53, 0x52, 0x9c, 0x13, 0x0b, 0x4a, 0x4a, 0x8b, 0x52, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x92, 0x21, 0x22, 0x11, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x4c, 0x41, 0x70, 0x3e, 0x92, 0x5c, 0xa4, 0x04, 0x13, 0x8a, 0x5c, 0xa4, 0x90, 0x10, 0x17,
	0x4b, 0x49, 0x66, 0x6e, 0xaa, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x24, 0xc7,
	0xc5, 0x95, 0x9f, 0x94, 0x95, 0x9a, 0x5c, 0x12, 0x5a, 0x9a, 0x99, 0x22, 0xc1, 0x02, 0x96, 0x41,
	0x12, 0x01, 0xc9, 0x27, 0x27, 0xe6, 0xa6, 0x16, 0x25, 0x82, 0xe5, 0x59, 0x21, 0xf2, 0x08, 0x11,
	0x25, 0x41, 0x2e, 0x7e, 0x64, 0x07, 0x16, 0xe4, 0x54, 0x1a, 0x05, 0x73, 0xf1, 0x87, 0x40, 0x7d,
	0x13, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4, 0xc0, 0xc5, 0x85, 0x50, 0x25, 0x24, 0x01,
	0xf1, 0xa4, 0x1e, 0x86, 0xcf, 0xa4, 0xc4, 0xb0, 0xc8, 0x14, 0xe4, 0x54, 0x2a, 0x31, 0x24, 0xb1,
	0x81, 0x25, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x79, 0xe2, 0x81, 0x29, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackingServiceClient is the client API for TrackingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackingServiceClient interface {
	// Adds a capture from a camera to the database, without calculating 3d coordinates
	AddCapture(ctx context.Context, in *AddCaptureRequest, opts ...grpc.CallOption) (*AddCaptureReply, error)
}

type trackingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackingServiceClient(cc grpc.ClientConnInterface) TrackingServiceClient {
	return &trackingServiceClient{cc}
}

func (c *trackingServiceClient) AddCapture(ctx context.Context, in *AddCaptureRequest, opts ...grpc.CallOption) (*AddCaptureReply, error) {
	out := new(AddCaptureReply)
	err := c.cc.Invoke(ctx, "/proto.TrackingService/AddCapture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackingServiceServer is the server API for TrackingService service.
type TrackingServiceServer interface {
	// Adds a capture from a camera to the database, without calculating 3d coordinates
	AddCapture(context.Context, *AddCaptureRequest) (*AddCaptureReply, error)
}

// UnimplementedTrackingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrackingServiceServer struct {
}

func (*UnimplementedTrackingServiceServer) AddCapture(ctx context.Context, req *AddCaptureRequest) (*AddCaptureReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCapture not implemented")
}

func RegisterTrackingServiceServer(s *grpc.Server, srv TrackingServiceServer) {
	s.RegisterService(&_TrackingService_serviceDesc, srv)
}

func _TrackingService_AddCapture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCaptureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).AddCapture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TrackingService/AddCapture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).AddCapture(ctx, req.(*AddCaptureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TrackingService",
	HandlerType: (*TrackingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCapture",
			Handler:    _TrackingService_AddCapture_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tracking.proto",
}
