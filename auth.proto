syntax = "proto3";

package proto;

service AuthService {
    rpc IsEmailRegistered (IsEmailRegisteredRequest) returns (IsEmailRegisteredReply) {}

    // get all organizations a user uuid is invited by
    rpc GetInvitesByEmail (GetInvitesByEmailRequest) returns (GetInvitesByEmailReply) {}
    rpc Register (RegisterRequest) returns (RegisterReply) {}
    rpc Login (LoginRequest) returns (LoginReply) {}

    rpc ActivateEmail (ActivateEmailRequest) returns (ActivateEmailReply) {}

    rpc GetUuidFromToken (GetUuidFromTokenRequest) returns (GetUuidFromTokenReply) {}
    rpc DropSingleToken (DropSingleTokenRequest) returns (DropSingleTokenReply) {}
    rpc DropAllTokens (DropAllTokensRequest) returns (DropAllTokensReply) {}

    // sets an email to primary and sets all others to non-primary
    rpc MakeEmailPrimary (MakeEmailPrimaryRequest) returns (MakeEmailPrimaryReply) {}
    // adds an email that will be set to non-primary
    rpc AddEmail (AddEmailRequest) returns (AddEmailReply) {}
    // deletes an email if it is non-primary
    rpc DeleteEmail (DeleteEmailRequest) returns (DeleteEmailReply) {}
}

message IsEmailRegisteredRequest {
    string email = 1;
}

message IsEmailRegisteredReply {
    bool isRegistered = 1;
    string accountUuid = 2;
}

message GetInvitesByEmailRequest {
    string email = 1;
}

message GetInvitesByEmailReply {
    repeated string organizationUuids = 1;
}

message RegisterRequest {
    string email = 1;
    string password = 2;
}

message RegisterReply {
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginReply {
    string token = 2;
}

message ActivateEmailRequest {
    string token = 1;
}

message ActivateEmailReply {
}

message GetUuidFromTokenRequest {
    string token = 1;
}

message GetUuidFromTokenReply {
    string uuid = 1;
}

message DropSingleTokenRequest {
    string token = 1;
}

message DropSingleTokenReply {
}

message DropAllTokensRequest {
    // A valid token of the account to drop all tokens of.
    string token = 1;
}

message DropAllTokensReply {
}

message MakeEmailPrimaryRequest {
    string emailUuid = 1;
}

message MakeEmailPrimaryReply {
}

message AddEmailRequest {
    // uuid of the account
    string accountUuid = 1;
    string email = 2;
}

message AddEmailReply {
    string emailUuid = 1;
    string verificationToken = 2;
}

message DeleteEmailRequest {
    // uuid of the email to delete. should not be a primary email
    string uuid = 1;
}

message DeleteEmailReply {
}
